create extension if not exists "http" with schema "extensions";


create table "public"."book_search_tracker" (
    "book_id" text not null,
    "hits" bigint,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp with time zone
);


alter table "public"."book_search_tracker" enable row level security;

create table "public"."reading_list" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null default auth.uid(),
    "book_id" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."reading_list" enable row level security;

create table "public"."user_search_history" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid default auth.uid(),
    "search_query" text not null,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."user_search_history" enable row level security;

alter table "public"."description_embeddings" drop column "description_embeddings";

alter table "public"."description_embeddings" add column "embeddings" vector(384);

CREATE UNIQUE INDEX book_search_tracker_pkey ON public.book_search_tracker USING btree (book_id);

CREATE UNIQUE INDEX reading_list_pkey ON public.reading_list USING btree (id);

CREATE UNIQUE INDEX user_search_history_id_key ON public.user_search_history USING btree (id);

CREATE UNIQUE INDEX user_search_history_pkey ON public.user_search_history USING btree (id);

alter table "public"."book_search_tracker" add constraint "book_search_tracker_pkey" PRIMARY KEY using index "book_search_tracker_pkey";

alter table "public"."reading_list" add constraint "reading_list_pkey" PRIMARY KEY using index "reading_list_pkey";

alter table "public"."user_search_history" add constraint "user_search_history_pkey" PRIMARY KEY using index "user_search_history_pkey";

alter table "public"."reading_list" add constraint "public_reading_list_book_id_fkey" FOREIGN KEY (book_id) REFERENCES books(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."reading_list" validate constraint "public_reading_list_book_id_fkey";

alter table "public"."user_search_history" add constraint "user_search_history_id_key" UNIQUE using index "user_search_history_id_key";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.match_books(query_embedding vector, match_threshold double precision, match_count integer)
 RETURNS TABLE(id text, similarity double precision)
 LANGUAGE sql
 STABLE
AS $function$
  select
    description_embeddings.id,
    1 - (description_embeddings.embeddings <=> query_embedding) as similarity
  from description_embeddings
  where 1 - (description_embeddings.embeddings <=> query_embedding) > match_threshold
  order by similarity desc
  limit match_count;
$function$
;

grant delete on table "public"."book_search_tracker" to "anon";

grant insert on table "public"."book_search_tracker" to "anon";

grant references on table "public"."book_search_tracker" to "anon";

grant select on table "public"."book_search_tracker" to "anon";

grant trigger on table "public"."book_search_tracker" to "anon";

grant truncate on table "public"."book_search_tracker" to "anon";

grant update on table "public"."book_search_tracker" to "anon";

grant delete on table "public"."book_search_tracker" to "authenticated";

grant insert on table "public"."book_search_tracker" to "authenticated";

grant references on table "public"."book_search_tracker" to "authenticated";

grant select on table "public"."book_search_tracker" to "authenticated";

grant trigger on table "public"."book_search_tracker" to "authenticated";

grant truncate on table "public"."book_search_tracker" to "authenticated";

grant update on table "public"."book_search_tracker" to "authenticated";

grant delete on table "public"."book_search_tracker" to "service_role";

grant insert on table "public"."book_search_tracker" to "service_role";

grant references on table "public"."book_search_tracker" to "service_role";

grant select on table "public"."book_search_tracker" to "service_role";

grant trigger on table "public"."book_search_tracker" to "service_role";

grant truncate on table "public"."book_search_tracker" to "service_role";

grant update on table "public"."book_search_tracker" to "service_role";

grant delete on table "public"."reading_list" to "anon";

grant insert on table "public"."reading_list" to "anon";

grant references on table "public"."reading_list" to "anon";

grant select on table "public"."reading_list" to "anon";

grant trigger on table "public"."reading_list" to "anon";

grant truncate on table "public"."reading_list" to "anon";

grant update on table "public"."reading_list" to "anon";

grant delete on table "public"."reading_list" to "authenticated";

grant insert on table "public"."reading_list" to "authenticated";

grant references on table "public"."reading_list" to "authenticated";

grant select on table "public"."reading_list" to "authenticated";

grant trigger on table "public"."reading_list" to "authenticated";

grant truncate on table "public"."reading_list" to "authenticated";

grant update on table "public"."reading_list" to "authenticated";

grant delete on table "public"."reading_list" to "service_role";

grant insert on table "public"."reading_list" to "service_role";

grant references on table "public"."reading_list" to "service_role";

grant select on table "public"."reading_list" to "service_role";

grant trigger on table "public"."reading_list" to "service_role";

grant truncate on table "public"."reading_list" to "service_role";

grant update on table "public"."reading_list" to "service_role";

grant delete on table "public"."user_search_history" to "anon";

grant insert on table "public"."user_search_history" to "anon";

grant references on table "public"."user_search_history" to "anon";

grant select on table "public"."user_search_history" to "anon";

grant trigger on table "public"."user_search_history" to "anon";

grant truncate on table "public"."user_search_history" to "anon";

grant update on table "public"."user_search_history" to "anon";

grant delete on table "public"."user_search_history" to "authenticated";

grant insert on table "public"."user_search_history" to "authenticated";

grant references on table "public"."user_search_history" to "authenticated";

grant select on table "public"."user_search_history" to "authenticated";

grant trigger on table "public"."user_search_history" to "authenticated";

grant truncate on table "public"."user_search_history" to "authenticated";

grant update on table "public"."user_search_history" to "authenticated";

grant delete on table "public"."user_search_history" to "service_role";

grant insert on table "public"."user_search_history" to "service_role";

grant references on table "public"."user_search_history" to "service_role";

grant select on table "public"."user_search_history" to "service_role";

grant trigger on table "public"."user_search_history" to "service_role";

grant truncate on table "public"."user_search_history" to "service_role";

grant update on table "public"."user_search_history" to "service_role";

CREATE TRIGGER embed_description AFTER INSERT ON public.books FOR EACH ROW EXECUTE FUNCTION supabase_functions.http_request('https://ujlladxdjxlufxnabgki.supabase.co/functions/v1/embedDescription', 'POST', '{"Content-type":"application/json"}', '{}', '1000');


